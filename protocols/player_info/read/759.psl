VarInt action = reader.readVarInt();
packet.add("action", action);

VarInt numberOfPlayers = reader.readVarInt();
packet.add("number_of_players", numberOfPlayers);

DataBlockArray playersBlock = new DataBlockArray();
packet.add("players", playersBlock);

for (int i = 0; i < numberOfPlayers.get(); i++) {
    DataBlock playerData = playersBlock.create();

    playerData.add("uuid", reader.readUUID());

    switch (action.get()) {
        case 0:
            playerData.add("name", reader.readString());

            VarInt numberOfProperties = reader.readVarInt();
            playerData.add("number_of_properties", numberOfProperties);

            DataBlockArray properties = new DataBlockArray();
            playerData.add("properties", properties);

            for (int j = 0; j < numberOfProperties.get(); j++) {
                DataBlock property = properties.create();

                property.add("name", reader.readString());
                property.add("value", reader.readString());

                boolean isSigned = reader.readBoolean();
                property.add("is_signed", isSigned);

                if (isSigned) {
                    property.add("signature", reader.readString());
                }
            }

            playerData.add("gamemode", reader.readVarInt());
            playerData.add("ping", reader.readVarInt());

            boolean hasDisplayName = reader.readBoolean();
            playerData.add("has_display_name", hasDisplayName);

            if (hasDisplayName) {
                playerData.add("display_name", reader.readString());
            }

            boolean hasSignatureData = reader.readBoolean();
            playerData.add("has_sig_data", hasSignatureData);

            if (hasSignatureData) {
                playerData.add("timestamp", reader.readLong());

                VarInt publicKeyLength = reader.readVarInt();
                playerData.add("public_key_length", publicKeyLength);
                playerData.add("public_key", reader.readFollowingBytes(publicKeyLength.get()));

                VarInt signatureLength = reader.readVarInt();
                playerData.add("signature_length", signatureLength);
                playerData.add("signature", reader.readFollowingBytes(signatureLength.get()));
            }

            break;

        case 1:
            playerData.add("gamemode", reader.readVarInt());
            break;

        case 2:
            playerData.add("ping", reader.readVarInt());
            break;

        case 3:
            boolean hasDisplayName = reader.readBoolean();
            playerData.add("has_display_name", hasDisplayName);

            if (hasDisplayName) {
                playerData.add("display_name", reader.readString());
            }

            break;

        case 4:
            break;
    }
}

